services:
  nextapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    container_name: nextapp
    restart: always
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
    command: sh -c "cd src && npx prisma migrate deploy && [ -f /app/data/.seeded ] || (npx prisma db seed && touch /app/data/.seeded) && cd .. && npm start"
    networks:
      - app-network
    volumes:
      - ./src:/app/src
      - ./app-data:/app/data

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - .env.production
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    build: ./nginx
    container_name: nginx-main
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    environment:
      DOMAIN_NAME: team3docker.uksouth.cloudapp.azure.com
    depends_on:
      - nextapp
    networks:
      - app-network

networks:
  app-network:

volumes:
  pgdata:
  certbot-etc:
    name: comp0067_2025_team3_certbot-etc
  certbot-www:
    name: comp0067_2025_team3_certbot-www
